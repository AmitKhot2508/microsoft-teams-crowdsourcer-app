<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddEntryTitle" xml:space="preserve">
    <value>Ask this question</value>
    <comment>Button title for Unanswered question card response</comment>
  </data>
  <data name="AnswerNotFound" xml:space="preserve">
    <value>I didn’t find any answers for this question. Do you want to ask the team?</value>
    <comment>Bot response text when answer to a question is not found</comment>
  </data>
  <data name="DeleteConfirmation" xml:space="preserve">
    <value>Are you sure you want to delete this item? The question and answer will both be deleted.</value>
    <comment>Delete QnA pair show card confirmation text</comment>
  </data>
  <data name="DeletedQnaPair" xml:space="preserve">
    <value>Deleted by {0}</value>
    <comment>Text shown on the card when a QnA pair is deleted</comment>
  </data>
  <data name="DeleteEntryTitle" xml:space="preserve">
    <value>Delete</value>
    <comment>button title for Delete action shown on QnA card</comment>
  </data>
  <data name="EmptyQnaValidation" xml:space="preserve">
    <value>Question cannot be empty.</value>
    <comment>Validation error message when user tries to add/update a QnA pair with blank/empty question text</comment>
  </data>
  <data name="GoToThread" xml:space="preserve">
    <value>View details</value>
    <comment>Button title for the card created through Messaging Extension</comment>
  </data>
  <data name="LastEdited" xml:space="preserve">
    <value>Last edited by {0}</value>
    <comment>Text shown on the card when a QnA pair is updated</comment>
  </data>
  <data name="PlaceholderAnswer" xml:space="preserve">
    <value>Type an answer here, if you have one</value>
    <comment>Ghost text for Answer text input in QnA show card</comment>
  </data>
  <data name="QuestionNotAvailable" xml:space="preserve">
    <value>It seems like the question is not available anymore.</value>
    <comment>validation message QnA is not present in knowledge base</comment>
  </data>
  <data name="UpdatedQnaPair" xml:space="preserve">
    <value>**{0} updated this item.**</value>
    <comment>audit trail text when a QnA pair is updated</comment>
  </data>
  <data name="UpdateEntryTitle" xml:space="preserve">
    <value>Update</value>
    <comment>button title for Update action shown on QnA card</comment>
  </data>
  <data name="WaitMessageAnswer" xml:space="preserve">
    <value>*Items are updated every few minutes.*</value>
    <comment>Knowledge Base update frequency user suggestive text on QnA card</comment>
  </data>
  <data name="WaitMessageQuestion" xml:space="preserve">
    <value>Please wait for some time, the answer for this question: "{0}" will be available in short time</value>
    <comment>error message when user tries to get answer before it is published</comment>
  </data>
  <data name="WelcomeMessage" xml:space="preserve">
    <value>Welcome!
I am a QnA bot that helps you and your team collaborate to get answers to your questions in a fun and transparent manner. I work on the principle of tapping the crowd intelligence and collective wisdom of your team members.
 
Go ahead ! Ask me a question by @mentioning me followed by your question.</value>
    <comment>Welcome card text</comment>
  </data>
  <data name="WaitMessage" xml:space="preserve">
    <value>Please wait for 15 minutes and try again.</value>
    <comment>error message when user tries to delete unpublished qna pair</comment>
  </data>
  <data name="ErrorMsgText" xml:space="preserve">
    <value>Sorry, it looks like something went wrong.</value>
    <comment>Generic error message used for uncaught exceptions</comment>
  </data>
  <data name="AnswerTitle" xml:space="preserve">
    <value>Answer</value>
    <comment>card text block title answer</comment>
  </data>
  <data name="QuestionTitle" xml:space="preserve">
    <value>Question</value>
    <comment>card question text block </comment>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
    <comment>card button title no</comment>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
    <comment>card button title yes</comment>
  </data>
  <data name="SubmitTitle" xml:space="preserve">
    <value>Submit</value>
    <comment>card button title submit</comment>
  </data>
  <data name="PlaceholderQuestion" xml:space="preserve">
    <value>Type a question here</value>
    <comment>card placeholder question text</comment>
  </data>
  <data name="AskQuestion" xml:space="preserve">
    <value>Ask a question</value>
    <comment>card button title on welcome card</comment>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
    <comment>card button title save</comment>
  </data>
  <data name="AddQuestionTaskTitle" xml:space="preserve">
    <value>Add question</value>
    <comment>task module title</comment>
  </data>
  <data name="NoEntriesFound" xml:space="preserve">
    <value>No entries found</value>
    <comment>messaging extension no entries text</comment>
  </data>
  <data name="DeletedQnaPairBold" xml:space="preserve">
    <value>**Deleted by {0}.**</value>
    <comment>Audit trail text when QnA pair is deleted</comment>
  </data>
  <data name="DateFormat" xml:space="preserve">
    <value>{0} at {1}</value>
    <comment>Used in date string format for adaptive card. {0} is for date and {1} is for time</comment>
  </data>
  <data name="NotInScope" xml:space="preserve">
    <value>Sorry, this bot can only work in a team and is not for use in personal scope.</value>
    <comment>Error message to show in case the bot is used in personal scope</comment>
  </data>
</root>